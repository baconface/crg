package scoreboard

import "testing"

type testCase struct {
	masterTime      int64
	masterCountdown bool
	slaveTime       int64
	slaveCountdown  bool
	expectedOffset  int64
}

func TestClockOffset(t *testing.T) {
	testCases := []testCase{
		testCase{10000, true, 2500, true, 500},
		testCase{10000, true, 2600, true, -400},
		testCase{10000, true, 2700, true, -300},
		testCase{10000, true, 2800, true, -200},
		testCase{10000, true, 2900, true, -100},
		testCase{10000, true, 3000, true, 0},
		testCase{10000, true, 3100, true, 100},
		testCase{10000, true, 3200, true, 200},
		testCase{10000, true, 3300, true, 300},
		testCase{10000, true, 3400, true, 400},
		testCase{10000, true, 3500, true, 500},
		testCase{10100, true, 2500, true, 400},
		testCase{10100, true, 2600, true, 500},
		testCase{10100, true, 2700, true, -400},
		testCase{10100, true, 2800, true, -300},
		testCase{10100, true, 2900, true, -200},
		testCase{10100, true, 3000, true, -100},
		testCase{10100, true, 3100, true, 0},
		testCase{10100, true, 3200, true, 100},
		testCase{10100, true, 3300, true, 200},
		testCase{10100, true, 3400, true, 300},
		testCase{10100, true, 3500, true, 400},
		testCase{10200, true, 2500, true, 300},
		testCase{10200, true, 2600, true, 400},
		testCase{10200, true, 2700, true, 500},
		testCase{10200, true, 2800, true, -400},
		testCase{10200, true, 2900, true, -300},
		testCase{10200, true, 3000, true, -200},
		testCase{10200, true, 3100, true, -100},
		testCase{10200, true, 3200, true, 0},
		testCase{10200, true, 3300, true, 100},
		testCase{10200, true, 3400, true, 200},
		testCase{10200, true, 3500, true, 300},
		testCase{10300, true, 2500, true, 200},
		testCase{10300, true, 2600, true, 300},
		testCase{10300, true, 2700, true, 400},
		testCase{10300, true, 2800, true, 500},
		testCase{10300, true, 2900, true, -400},
		testCase{10300, true, 3000, true, -300},
		testCase{10300, true, 3100, true, -200},
		testCase{10300, true, 3200, true, -100},
		testCase{10300, true, 3300, true, 0},
		testCase{10300, true, 3400, true, 100},
		testCase{10300, true, 3500, true, 200},
		testCase{10400, true, 2500, true, 100},
		testCase{10400, true, 2600, true, 200},
		testCase{10400, true, 2700, true, 300},
		testCase{10400, true, 2800, true, 400},
		testCase{10400, true, 2900, true, 500},
		testCase{10400, true, 3000, true, -400},
		testCase{10400, true, 3100, true, -300},
		testCase{10400, true, 3200, true, -200},
		testCase{10400, true, 3300, true, -100},
		testCase{10400, true, 3400, true, 0},
		testCase{10400, true, 3500, true, 100},
		testCase{10500, true, 2500, true, 0},
		testCase{10500, true, 2600, true, 100},
		testCase{10500, true, 2700, true, 200},
		testCase{10500, true, 2800, true, 300},
		testCase{10500, true, 2900, true, 400},
		testCase{10500, true, 3000, true, -500},
		testCase{10500, true, 3100, true, -400},
		testCase{10500, true, 3200, true, -300},
		testCase{10500, true, 3300, true, -200},
		testCase{10500, true, 3400, true, -100},
		testCase{10500, true, 3500, true, 0},
		testCase{10600, true, 2500, true, -100},
		testCase{10600, true, 2600, true, 0},
		testCase{10600, true, 2700, true, 100},
		testCase{10600, true, 2800, true, 200},
		testCase{10600, true, 2900, true, 300},
		testCase{10600, true, 3000, true, 400},
		testCase{10600, true, 3100, true, -500},
		testCase{10600, true, 3200, true, -400},
		testCase{10600, true, 3300, true, -300},
		testCase{10600, true, 3400, true, -200},
		testCase{10600, true, 3500, true, -100},
		testCase{10700, true, 2500, true, -200},
		testCase{10700, true, 2600, true, -100},
		testCase{10700, true, 2700, true, 0},
		testCase{10700, true, 2800, true, 100},
		testCase{10700, true, 2900, true, 200},
		testCase{10700, true, 3000, true, 300},
		testCase{10700, true, 3100, true, 400},
		testCase{10700, true, 3200, true, -500},
		testCase{10700, true, 3300, true, -400},
		testCase{10700, true, 3400, true, -300},
		testCase{10700, true, 3500, true, -200},
		testCase{10800, true, 2500, true, -300},
		testCase{10800, true, 2600, true, -200},
		testCase{10800, true, 2700, true, -100},
		testCase{10800, true, 2800, true, 0},
		testCase{10800, true, 2900, true, 100},
		testCase{10800, true, 3000, true, 200},
		testCase{10800, true, 3100, true, 300},
		testCase{10800, true, 3200, true, 400},
		testCase{10800, true, 3300, true, -500},
		testCase{10800, true, 3400, true, -400},
		testCase{10800, true, 3500, true, -300},
		testCase{10900, true, 2500, true, -400},
		testCase{10900, true, 2600, true, -300},
		testCase{10900, true, 2700, true, -200},
		testCase{10900, true, 2800, true, -100},
		testCase{10900, true, 2900, true, 0},
		testCase{10900, true, 3000, true, 100},
		testCase{10900, true, 3100, true, 200},
		testCase{10900, true, 3200, true, 300},
		testCase{10900, true, 3300, true, 400},
		testCase{10900, true, 3400, true, -500},
		testCase{10900, true, 3500, true, -400},
		testCase{10000, true, 2500, false, -500},
		testCase{10000, true, 2600, false, -400},
		testCase{10000, true, 2700, false, -300},
		testCase{10000, true, 2800, false, -200},
		testCase{10000, true, 2900, false, -100},
		testCase{10000, true, 3000, false, 0},
		testCase{10000, true, 3100, false, 100},
		testCase{10000, true, 3200, false, 200},
		testCase{10000, true, 3300, false, 300},
		testCase{10000, true, 3400, false, 400},
		testCase{10000, true, 3500, false, -500},
		testCase{10100, true, 2500, false, -400},
		testCase{10100, true, 2600, false, -300},
		testCase{10100, true, 2700, false, -200},
		testCase{10100, true, 2800, false, -100},
		testCase{10100, true, 2900, false, 0},
		testCase{10100, true, 3000, false, 100},
		testCase{10100, true, 3100, false, 200},
		testCase{10100, true, 3200, false, 300},
		testCase{10100, true, 3300, false, 400},
		testCase{10100, true, 3400, false, -500},
		testCase{10100, true, 3500, false, -400},
		testCase{10200, true, 2500, false, -300},
		testCase{10200, true, 2600, false, -200},
		testCase{10200, true, 2700, false, -100},
		testCase{10200, true, 2800, false, 0},
		testCase{10200, true, 2900, false, 100},
		testCase{10200, true, 3000, false, 200},
		testCase{10200, true, 3100, false, 300},
		testCase{10200, true, 3200, false, 400},
		testCase{10200, true, 3300, false, -500},
		testCase{10200, true, 3400, false, -400},
		testCase{10200, true, 3500, false, -300},
		testCase{10300, true, 2500, false, -200},
		testCase{10300, true, 2600, false, -100},
		testCase{10300, true, 2700, false, 0},
		testCase{10300, true, 2800, false, 100},
		testCase{10300, true, 2900, false, 200},
		testCase{10300, true, 3000, false, 300},
		testCase{10300, true, 3100, false, 400},
		testCase{10300, true, 3200, false, -500},
		testCase{10300, true, 3300, false, -400},
		testCase{10300, true, 3400, false, -300},
		testCase{10300, true, 3500, false, -200},
		testCase{10400, true, 2500, false, -100},
		testCase{10400, true, 2600, false, 0},
		testCase{10400, true, 2700, false, 100},
		testCase{10400, true, 2800, false, 200},
		testCase{10400, true, 2900, false, 300},
		testCase{10400, true, 3000, false, 400},
		testCase{10400, true, 3100, false, -500},
		testCase{10400, true, 3200, false, -400},
		testCase{10400, true, 3300, false, -300},
		testCase{10400, true, 3400, false, -200},
		testCase{10400, true, 3500, false, -100},
		testCase{10500, true, 2500, false, 0},
		testCase{10500, true, 2600, false, 100},
		testCase{10500, true, 2700, false, 200},
		testCase{10500, true, 2800, false, 300},
		testCase{10500, true, 2900, false, 400},
		testCase{10500, true, 3000, false, 500},
		testCase{10500, true, 3100, false, -400},
		testCase{10500, true, 3200, false, -300},
		testCase{10500, true, 3300, false, -200},
		testCase{10500, true, 3400, false, -100},
		testCase{10500, true, 3500, false, 0},
		testCase{10600, true, 2500, false, 100},
		testCase{10600, true, 2600, false, 200},
		testCase{10600, true, 2700, false, 300},
		testCase{10600, true, 2800, false, 400},
		testCase{10600, true, 2900, false, 500},
		testCase{10600, true, 3000, false, -400},
		testCase{10600, true, 3100, false, -300},
		testCase{10600, true, 3200, false, -200},
		testCase{10600, true, 3300, false, -100},
		testCase{10600, true, 3400, false, 0},
		testCase{10600, true, 3500, false, 100},
		testCase{10700, true, 2500, false, 200},
		testCase{10700, true, 2600, false, 300},
		testCase{10700, true, 2700, false, 400},
		testCase{10700, true, 2800, false, 500},
		testCase{10700, true, 2900, false, -400},
		testCase{10700, true, 3000, false, -300},
		testCase{10700, true, 3100, false, -200},
		testCase{10700, true, 3200, false, -100},
		testCase{10700, true, 3300, false, 0},
		testCase{10700, true, 3400, false, 100},
		testCase{10700, true, 3500, false, 200},
		testCase{10800, true, 2500, false, 300},
		testCase{10800, true, 2600, false, 400},
		testCase{10800, true, 2700, false, 500},
		testCase{10800, true, 2800, false, -400},
		testCase{10800, true, 2900, false, -300},
		testCase{10800, true, 3000, false, -200},
		testCase{10800, true, 3100, false, -100},
		testCase{10800, true, 3200, false, 0},
		testCase{10800, true, 3300, false, 100},
		testCase{10800, true, 3400, false, 200},
		testCase{10800, true, 3500, false, 300},
		testCase{10900, true, 2500, false, 400},
		testCase{10900, true, 2600, false, 500},
		testCase{10900, true, 2700, false, -400},
		testCase{10900, true, 2800, false, -300},
		testCase{10900, true, 2900, false, -200},
		testCase{10900, true, 3000, false, -100},
		testCase{10900, true, 3100, false, 0},
		testCase{10900, true, 3200, false, 100},
		testCase{10900, true, 3300, false, 200},
		testCase{10900, true, 3400, false, 300},
		testCase{10900, true, 3500, false, 400},
	}

	for _, tc := range testCases {
		m := &clock{nil, "master", "master", nil, &minMaxNumber{nil, "", tc.masterCountdown, tc.masterTime, 0, 90000, 1000, nil}, tc.masterCountdown, true, false, nil}
		s := &clock{nil, "slave", "slave", nil, &minMaxNumber{nil, "", tc.slaveCountdown, tc.slaveTime, 0, 90000, 1000, nil}, tc.slaveCountdown, true, false, nil}

		offset := calculateClockOffset(m, s)
		if offset != tc.expectedOffset {
			t.Errorf("ERROR Master(%v): %6v  Slave(%v): %6v  Offset: %6v  Expected Offset: %6v",
				m.countdown, m.time.num, s.countdown, s.time.num, offset, tc.expectedOffset)
		} else {
			t.Logf("Master(%v): %6v  Slave(%v): %6v  Offset: %6v  Expected Offset: %6v",
				m.countdown, m.time.num, s.countdown, s.time.num, offset, tc.expectedOffset)
		}
	}
}
